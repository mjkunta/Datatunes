[
  {
    "objectID": "posts/we_are_live/index.html",
    "href": "posts/we_are_live/index.html",
    "title": "We are live!",
    "section": "",
    "text": "Look at me, I have a blog. I didn’t even break a sweat creating this. To Quarto creators, thank you!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Datatunes",
    "section": "",
    "text": "Renaming Columns with Python Dictionaries\n\n\n\n\n\n\n\n\n\n\n\n\nNov 6, 2023\n\n\nMaangi Josiah\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 5, 2023\n\n\nMaangi Josiah\n\n\n\n\n\n\n  \n\n\n\n\nWe are live!\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nNov 2, 2023\n\n\nMaangi Josiah\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "Hello, I’m Maangi Josiah and a data addict.\nI’m a Finance graduate from the University of Nairobi, Kenya with an appetite for data tools. Like most analysts, I draw my dopamine from utilizing SQL, R, Power BI, and some Python. In this blog, I chronicle my data journey, sharing simple yet invaluable tricks I have encountered along the way. I have an obvious bias for R & SQL."
  },
  {
    "objectID": "posts/Renaming Columns/index.html",
    "href": "posts/Renaming Columns/index.html",
    "title": "Renaming Columns with Python Dictionaries",
    "section": "",
    "text": "Import the required libraries\n\nimport pandas as pd\nimport os\n\n\n\nCreate a simple customer information data-frame\n\ndata = {\n    'given name': ['Josiah', 'Fred', 'Julie'],\n    'family name': ['Maangi', 'Juma', 'Musau'],\n    'phone':[25471234, 25472345,25473456],\n    'email': ['josiah@gml.com', 'fred@gml.com','julie@gml.com'],\n    'sex': ['M','M','F'],\n    'town': ['Nairobi', 'Kisumu', 'Mombasa']\n}\n\ncustomer_df = pd.DataFrame(data)\n\nHere is how our small data-frame looks:\n\ncustomer_df\n\n\n\n\n\n\n\n\ngiven name\nfamily name\nphone\nemail\nsex\ntown\n\n\n\n\n0\nJosiah\nMaangi\n25471234\njosiah@gml.com\nM\nNairobi\n\n\n1\nFred\nJuma\n25472345\nfred@gml.com\nM\nKisumu\n\n\n2\nJulie\nMusau\n25473456\njulie@gml.com\nF\nMombasa\n\n\n\n\n\n\n\n\n\nMake a copy of customer_df\n\ncustomer_df_copy = customer_df.copy()\n\n\n\nHow I want to Rename my columns\nI will rename my columns as below:\n\ngiven name to First Name\nfamily name to Last Name\ntown to City\n\n\n\nRename a single column\nTo rename columns, we use the rename function from pandas as follows.\nThe column we want to rename(given name) will be on the left, and the new name we want to assign to this column(Family Name) will be on the right. The two names should be separated by a colon.\nThe inplace = True argument means this change happen with our customer_df_copy.\n\ncustomer_df_copy.rename(columns = {'given name': 'Family Name'}, inplace = True)\n\n\n\nRename multiple columns at once\n\ncustomer_df_copy.rename(columns = {'given name': 'Family Name', 'town': 'City'}, inplace = True)\n\n\n\nCreate a dictionary of column mappings from an excel/csv file\nImagine a scenario where you have to rename about 15 columns every time you receive files from a given customers. Using the above approach is not only manual but prone to errors. Since this is a repetitive process;\n\nI will create a file with customer - company column mappings,\nconvert it into a dictionary, and\nuse it to rename files as below.\n\n\n\n\nclient to company column mapping\n\n\nCode\n\n# reading in my column mapping file\nmapping = pd.read_excel(r\"C:\\Users\\ADMIN\\Downloads\\col_mapping.xlsx\")\n\n# creating a data dictionary\ncol_mapping_dict = mapping.set_index('customer_details')['company_mapping'].to_dict()\n\n\n\nRename using provided column mappings\n\n# I will make a copy of my customer_df again\nrenamed_df = customer_df.copy()\n\n#then rename it\nrenamed_df.rename(columns = col_mapping_dict, inplace = True)\n\n\n\nTable 1: Master to renamed\n\n\n\n\n(a) customer_df\n\n\n\n\n\n\n\n\n\n\ngiven name\nfamily name\nphone\nemail\nsex\ntown\n\n\n\n\nJosiah\nMaangi\n25471234\njosiah@gml.com\nM\nNairobi\n\n\nFred\nJuma\n25472345\nfred@gml.com\nM\nKisumu\n\n\nJulie\nMusau\n25473456\njulie@gml.com\nF\nMombasa\n\n\n\n\n\n\n(b) renamed_df\n\n\n\n\n\n\n\n\n\n\nFirst Name\nLast Name\nPhone No\nEmail address\nGender\nCity\n\n\n\n\nJosiah\nMaangi\n25471234\njosiah@gml.com\nM\nNairobi\n\n\nFred\nJuma\n25472345\nfred@gml.com\nM\nKisumu\n\n\nJulie\nMusau\n25473456\njulie@gml.com\nF\nMombasa"
  }
]